% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_binary.R
\name{plot_binary}
\alias{plot_binary}
\title{Visualise Binary Survey Data with Bar Plots}
\usage{
plot_binary(
  data,
  vars,
  value,
  group = NULL,
  weight = NULL,
  totalColour = colour_pal("French Grey"),
  groupColours = colour_pal("catExtended")
)
}
\arguments{
\item{data}{A data frame containing survey data.}

\item{vars}{A list mapping original column names to new variable names for visualisation.
For example, \code{list(Q1a = "Art", Q1b = "Automobiles")}. This parameter is required.}

\item{value}{The binary response value (e.g., "Yes") to be visualized. Required.}

\item{group}{An optional variable for comparing responses between different groups.}

\item{weight}{An optional variable containing weight factors for analysis.}

\item{totalColour}{The colour used for plotting total response percentages (default: French Grey).}

\item{groupColours}{A vector of colours used for plotting grouped response percentages
(default: an extended categorical palette).}
}
\value{
A ggplot2 bar plot visualising the percentage of the specified binary response
across the chosen variables. The plot includes comparisons for total responses and,
if specified, grouped responses.
}
\description{
\code{plot_binary} visualises binary survey responses for specified variables using bar plots.
It leverages the \code{grid_vars} function to create a comparative visual representation,
supporting optional grouping and weighting.
}
\details{
The function first validates the binary nature of the specified variables and then
prepares the data for visualisation. The resulting plot shows the proportion of the
specified binary response (\code{value}) for each variable in \code{vars}. When a \code{group}
variable is provided, the plot includes facet-wrapped comparisons across groups.
}
\examples{
\dontrun{
  # Example: Visualise binary survey responses by gender
  vars <- list(Q1a = "Art", Q1b = "Automobiles", Q1c = "Birdwatching")
  df <- plot_binary(dataset, vars = vars, value = "Yes", group = "gender", weight = "wgtvar")
}

}
